{"version":3,"sources":["components/Input.js","components/Footer.js","components/Form.js","utils.js","App.js","index.js"],"names":["WrapperInput","styled","label","InputTitle","h3","InputStyle","input","Required","span","DescInfo","p","StyledError","className","type","content","MemoRequired","memo","MemoTitle","inputTitle","required","MemoDescInfo","children","InputRadio","options","title","onChange","map","option","htmlFor","id","input-name","value","name","Input","inputType","placeholder","desc","isValid","handleInputChange","inputValue","FooterWrapper","div","FooterContent","MemoFooter","WrapperForm","Title","h1","Description","Button","button","Form","formTitle","questions","handleCheckInputValue","question","index","onClick","questionArray","App","hasError","answers","useState","setQuestions","values","setValue","e","target","newQuestions","preventDefault","filterIsValid","length","data","test","checkValid","find","item","i","alert","JSON","stringify","window","location","reload","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47adc114.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport { memo } from 'react'\nconst WrapperInput = styled.label`\n  margin-top: 20px;\n  display:block;\n`\nconst InputTitle = styled.h3`\n  padding-top: 15px;\n  font-weight:normal;\n`\nconst InputStyle = styled.input`\n  font-size:1em;\n  border:1px solid #aaa;\n  padding:0.5em;\n`\nconst Required = styled.span`\n  color: #e74149; \n  margin-left:0.5em;\n  font-size:1rem;\n`\nconst DescInfo = styled.p`\n  font-size:0.9em;\n  color:black;\n  line-height:1em;\n`\nconst ErrorMessage = ({ className, type, content}) => (\n  <p className={className}>\n    {type === 'text'|| type ==='radio' ? content:\n    `請輸入完整的${type == 'email' ? '電子郵件' : '手機號碼'}`}\n  </p>\n)\nconst StyledError = styled(ErrorMessage)`\n  color: red;\n  position: absolute;\n  margin:0;\n`\nconst MemoRequired = memo(({content})=><Required>{content}</Required>)\nconst MemoTitle = memo(({inputTitle, required})=>(\n<InputTitle>{inputTitle}{required ? <MemoRequired content={'*'}/> : ''}\n</InputTitle>)\n)\nconst MemoDescInfo = memo(({children})=> <DescInfo>{children}</DescInfo>)\nfunction InputRadio({ options, type, title, onChange }) {\n  return <div>\n    {options.map(\n      option => <WrapperInput key={option.id} htmlFor={`data_${option.id}`} >\n        <InputStyle\n          input-name={title}\n          value={option.content}\n          type={type}\n          id={`data_${option.id}`}\n          name={title}\n          onChange={onChange}\n        />\n        {option.content}\n      </WrapperInput >)}\n  </div>\n}\nfunction Input({ inputTitle, inputType, required, options, placeholder, desc, isValid, handleInputChange, inputValue }) {\n  return (\n    <WrapperInput key={inputTitle} >\n    <MemoTitle inputTitle={inputTitle} required= {required} />\n      {desc ? <MemoDescInfo children={desc}/>: ''}\n      {inputType !== 'radio' ?\n        <InputStyle\n          name={inputTitle}\n          onChange={handleInputChange}\n          placeholder={placeholder}\n          type={inputType}\n          value={inputValue} /> :\n        <InputRadio\n          options={options}\n          type={inputType}\n          title={inputTitle}\n          onChange={handleInputChange} />}\n      {isValid && required && <StyledError type={inputType} content={placeholder} />}\n    </WrapperInput>\n  );\n}\nexport { MemoDescInfo, MemoRequired }\nexport default Input;\n","import styled from 'styled-components'\nimport{ memo } from 'react'\nconst FooterWrapper = styled.div`\n  background-color: #000;\n  display:block;\n`\nconst FooterContent = styled.p`\n  color: #999999;\n  font-size: 13px;\n  text-align: center;\n  line-height: 3em;\n  margin:0;\n`\nconst MemoFooter = memo(()=>{\n  return (\n    <FooterWrapper>\n      <FooterContent>&copy; 2020 &copy; Copyright. All rights Reserved</FooterContent>\n    </FooterWrapper>\n  )\n})\n\n export { MemoFooter }\n","import styled from 'styled-components'\nimport Input, { MemoDescInfo, MemoRequired }  from './Input'\nimport { MemoFooter } from './Footer'\nimport { memo } from 'react'\nconst WrapperForm = styled.div`\n  max-width: 645px;\n  margin: 60px auto;\n  background-color: #fff;\n  border-top: solid 6px #fad312;\n  box-shadow: 1.8px 2.4px 5px 0 rgba(0, 0, 0, 0.3);\n  padding: 30px 40px;\n`\nconst Title = styled.h1`\n  margin-bottom: 2rem;\n  font-weight: bold;\n`\nconst Description = styled.div`\n`\nconst Button = styled.button`\n  margin-top: 2em;\n  padding:0.8em 1.3em;\n  border-radius: 3px;\n  border:none;\n  background-color: #fad312;\n  cursor: pointer;\n`\nconst MemoTitle = memo(({title})=> <Title> {title} </Title>)\nfunction Form({ formTitle, questions,inputValue, handleInputChange, handleCheckInputValue}) {\n  return (\n    <>\n      <WrapperForm>\n        <MemoTitle  title={formTitle}/>\n        <Description>\n          <MemoDescInfo>活動日期：2020/12/10 ~ 2020/12/11</MemoDescInfo>\n          <MemoDescInfo>活動地點：台北市大安區新生南路二段1號</MemoDescInfo>\n          <MemoRequired content={'* 必填'}/>\n        </Description>\n        <form >\n          {questions.map((question, index) =>\n            <Input\n              key={question.title + index}\n              inputTitle={question.title}\n              inputType={question.type}\n              inputValue={question.value || inputValue[question.title]||''}\n              options={question.options}\n              required={question.required}\n              isValid={question.isValid}\n              placeholder={question.placeholder}\n              desc={question.desc}\n              handleInputChange={handleInputChange}\n               />\n          )}\n          <Button onClick={handleCheckInputValue}>提交</Button >\n          <MemoDescInfo>請勿透過表單送出您的密碼。</MemoDescInfo>\n        </form>\n      </WrapperForm>\n      <MemoFooter />\n    </>\n  );\n}\n\nexport default Form;\n","export const questionArray = [\n  {\n    title: '暱稱',\n    type: 'text',\n    desc: null,\n    required: true,\n    options: null,\n    value: '',\n    placeholder: '請輸入你的暱稱',\n    isValid: false,\n  },\n  {\n    title: '電子郵件',\n    type: 'email',\n    desc: null,\n    required: true,\n    options: null,\n    value: '',\n    placeholder: '請輸入你的電子郵件',\n    isValid: false,\n  },\n  {\n    title: '手機號碼',\n    type: 'tel',\n    desc: null,\n    required: true,\n    value: '',\n    options: null,\n    placeholder: '請輸入你的手機號碼',\n    isValid: false,\n  },\n  {\n    title: '報名類型',\n    type: 'radio',\n    desc: null,\n    required: true,\n    value: '',\n    options: [{ id: 1, content: '躺在床上用想像力實作' }, { id: 2, content: '趴在地上滑手機找現成的' }],\n    placeholder: '請選擇你的報名類型',\n    isValid: false,\n  },\n  {\n    title: '怎麼知道這個活動的？',\n    type: 'text',\n    desc: null,\n    required: true,\n    value: '',\n    options: null,\n    placeholder: '請輸入你的回答',\n    isValid: false,\n  }, {\n    title: '其他',\n    type: 'text',\n    desc: '對活動的一些建議',\n    required: false,\n    value: '',\n    options: null,\n    placeholder: '請輸入你的回答',\n    isValid: false,\n  },\n\n\n]\nexport function checkValid(data) {\n  let type = data.type\n  let value = data.value\n  let emailRule = /^\\w+((-\\w+)|(\\.\\w+))*\\@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z]+$/\n  let phoneRule = /^09\\d{8}/\n  if (type === 'email') return emailRule.test(value)\n  if (type === 'tel') return phoneRule.test(value)\n  return true\n}","import React, { useState } from 'react';\nimport Form from './components/Form'\nimport { questionArray , checkValid } from './utils';\n\nconst formTitle = '新拖延運動報名表單';\n\nfunction App() {\n  const isValid = false;\n  let hasError = false;\n  let answers = {}\n  const [questions, setQuestions] = useState(questionArray)\n  const [values, setValue] = useState({ name: '' })\n  const handleInputChange = (e) => {\n    const {value, name} = e.target;\n    const newQuestions = questions.map(question => {\n      if (question.title !== name) return question\n      return {\n        ...question,\n        value,\n        isValid\n      }\n    })\n    setValue({ [name]: value });\n    setQuestions(newQuestions)\n  }\n  const handleCheckInputValue = (e) => {\n    e.preventDefault();\n    const filterIsValid = questions.map(question => {\n      return !question.required ? question :     //檢查問題是否必填，不是則回傳\n        question.value.length === 0 ? { ...question, isValid: true } :     //檢查是否為空值\n          checkValid(question) ? { ...question, isValid } : { ...question, isValid: true }  //是否符合資料格式\n    })\n    setQuestions(filterIsValid)\n    //檢查是否還有符合規定的資料格式或空值，如果無，則回傳 undefined\n    const checkError = filterIsValid.find(item => item['isValid'] === true)  \n    if (typeof checkError !== 'undefined') {\n      hasError = true\n    }\n    if (!hasError) {\n      for (let i = 0; i < questions.length; i += 1) {\n        answers[questions[i].title] = questions[i].value\n      }\n      alert(JSON.stringify(answers))\n      window.location.reload()\n    }\n  }\n  return (\n    <Form\n      formTitle={formTitle}\n      questions={questions}\n      inputValue={values}\n      handleInputChange={handleInputChange}\n      handleCheckInputValue={handleCheckInputValue}\n    />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}